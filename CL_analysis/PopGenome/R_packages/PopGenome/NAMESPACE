#
#
#
useDynLib(PopGenome)

import(methods)
import(ff)

importFrom("grDevices", "colors", "rainbow")
importFrom("graphics", "abline", "axis", "lines", "plot", "points")
importFrom("stats", "density", "fisher.test", "loess", "pchisq", "predict", "quantile", "rgamma", "rnorm","pnorm", "runif", "var","sd")
importFrom("utils", "combn", "read.table")

exportClass(GENOME)
exportMethods(neutrality.stats)
exportMethods(linkage.stats)
exportMethods(detail.stats)
exportMethods(F_ST.stats)
exportMethods(diversity.stats)
exportMethods(recomb.stats)
exportMethods(set.populations)
exportMethods(set.outgroup)
exportMethods(sliding.window.transform)
exportMethods(show.slots)
exportMethods(get.status)
exportMethods(MKT)
exportMethods(splitting.data)
exportMethods(set.ref.positions)
exportMethods(mult.linkage.stats)
exportMethods(calc.R2)
exportMethods(sweeps.stats)
exportMethods(set.synnonsyn)
exportMethods(Achaz.stats)
exportMethods(introgression.stats)
exportMethods(jack.knife.transform)
exportMethods(diversity.stats.between)
exportMethods(calc.fixed.shared)
exportMethods(weighted.jackknife)


exportMethods(F_ST.stats.2)
exportMethods(get.sum.data)
exportMethods(get.neutrality)
exportMethods(get.linkage)
exportMethods(get.recomb)
exportMethods(get.F_ST)
exportMethods(get.diversity)
exportMethods(get.MKT)
exportMethods(get.detail)
exportMethods(getBayes)
exportMethods(get.sweeps)
exportMethods(region.as.fasta)
exportMethods(get.codons)
exportMethods(get.individuals)
exportMethods(PG_plot.biallelic.matrix)
exportMethods(count.unknowns)
exportMethods(set.filter)
exportMethods(pairwise.Tv)


export(create.PopGenome.method)
export(concatenate.regions)
export(concatenate.classes)
export(get_gff_info)
export(get.biallelic.matrix)
export(BayeScanR)
export(readData)
export(read.big.fasta)
export(readHapMap)
export(readSNP)
export(readVCF)
export(save.session)
export(load.session)
export(readMS)
export(MS_getStats)
export(codontable)
export(PopGplot)
export(Whop_readVCF)
export(VCF_split_into_scaffolds)
export(GFF_split_into_scaffolds)
export(split_data_into_GFF_attributes)
export(split_data_into_GFF_features)
export(get.feature.names)

export(MS)
